import openpyxl as op
import random
import os
import telebot
from telebot import types

file_name = 'my_artikel.xlsx'
new_words = []
bot = telebot.TeleBot('5875104312:AAECXNFjXGzcf6j1rrbs3P_qRQvBndVgxU8')
current_answer = 0
current_words = ''
current_article = ''
current_translate = ''
count_words = 0
rand_words = []
words_list_excel_3 = []


def read_list_from_excel(file_exel: str) -> list:
    '''—Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ —Å–æ—Å—Ç–∞–ª–µ–Ω–∏—é –∏–∑ —Ñ–∞–π–ª–∞ —ç–∫—Å–µ–ª—å —Å–ø–∏—Å–∫–∞'''

    words_list_local = []
    wb = op.load_workbook(file_exel, data_only=True)
    sheet = wb.active
    max_rows = sheet.max_row

    for i in range(2, max_rows + 1):
        article = sheet.cell(row=i, column=2).value
        words = sheet.cell(row=i, column=3).value
        translate = sheet.cell(row=i, column=4).value

        if words is not None:
            if len(words) != 0:
                words_list_local.append([article, words, translate])
    return words_list_local


def check_result_file(file_txt: str) -> list:
    '''—Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞'''
    new_words_local = []

    if not os.path.exists(file_txt):
        open(file_txt, 'tw', encoding='utf-8')
    else:
        with open(file_txt, 'r', encoding='utf-8') as f:
            new_words_local = f.read().splitlines()

    return new_words_local


# —Ç–µ–ª–æ –±–æ—Ç–∞

@bot.message_handler(commands=['start'])
def start_message(message):
    print('run.start_message')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–ù–æ–≤–∏—á–æ–∫')
    item2 = types.KeyboardButton('–°–µ—Ä—è–¥–Ω–∏—á–æ–∫')
    item3 = types.KeyboardButton('–ú–æ–∑–∂–µ—á–æ–∫')
    markup.add(item1, item2, item3)
    msg = bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}üëã !\n"
                                            "–Ø –±–æ—Ç-—Ç—Ä–µ–Ω–µ—Ä –∞—Ä—Ç–∏–∫–ª–µ–π –≤ –Ω–µ–º–µ—Ü–∫–æ–º —è–∑—ã–∫–µ\n"
                                            "–í—ã–±–µ—Ä–µ—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏".format(message.from_user, bot.get_me()),
                           parse_mode='html', reply_markup=markup)
    bot.register_next_step_handler(message, main)


@bot.message_handler(content_types=['text'])
def main(message, words_list_excel=None):
    global count_words, current_article

    print(f'run.main {count_words} {current_article}')
    count_true_anwords = 0
    if message.chat.type == 'private':

        if message.text == '–ù–æ–≤–∏—á–æ–∫':
            count_words = 10
        elif message.text == '–°–µ—Ä—è–¥–Ω–∏—á–æ–∫':
            count_words = 30
        elif message.text == '–ú–æ–∑–∂–µ—á–æ–∫':
            count_words = 50
        else:
            count_words = 10

        if message.text in ['–ù–æ–≤–∏—á–æ–∫', '–°–µ—Ä—è–¥–Ω–∏—á–æ–∫', '–ú–æ–∑–∂–µ—á–æ–∫']:
            # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤
            global rand_words, words_list_excel_3

            words_list_excel_2 = read_list_from_excel(file_name)
            new_words = check_result_file('new_words.txt')

            # —É–¥–∞–ª—è–µ–º –≤ —Å–ø–∏—Å–∫–µ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤–∞ –∏–∑ –∑–∞—É—á–µ–Ω–Ω—ã—Ö
            words_list_excel = []
            for i in range(0, len(words_list_excel_2)):
                if not words_list_excel_2[i][1] in new_words:
                    words_list_excel.append(words_list_excel_2[i])

            for i in range(0, count_words):
                rand_words = random.randint(0, len(words_list_excel))
                words_list_excel_3.append(words_list_excel[rand_words])

        if message.text in ['der', 'die', 'das']:
            global current_answer
            if current_article == message.text:
                bot.send_message(message.chat.id, f'{" ".join(words_list_excel_3[current_answer])}\n–≤—ã —É–≥–∞–¥–∞–ª–∏')
                count_true_anwords += 1
                new_words.append(words_list_excel_3[current_answer][1])
            else:
                bot.send_message(message.chat.id, f'{" ".join(words_list_excel_3[current_answer])}'
                                                  f'\n—Å–ª–æ–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ–≤ —Å–ø–∏—Ä–æ–∫ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è')
            current_answer += 1

            if count_words == current_answer:
                bot.send_message(message.chat.id,
                                 f'''–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ {count_true_anwords} –∏–∑ {count_words}
                              –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {round((count_true_anwords / count_words * 100), 2)} –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤''')
                bot.send_message(message.chat.id,
                                 f'''—Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Å–≤–æ–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∫—É—Ä—Å–∞ {len(new_words)} –∏–∑ {len(words_list_excel_2)}
                               –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Å–≤–æ–Ω–∏—è –∫—É—Ä—Å–∞: {round((len(new_words) / len(words_list_excel_2) * 100), 2)} –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤''')
                # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                # item1 = types.KeyboardButton("–ó–∞–∫–æ–Ω—á–∏—Ç—å")
                # item2 = types.KeyboardButton("–ï—â–µ —Ä–∞–∑–æ–∫")
                # markup.add(item1, item2)
                # if message.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å':
                #     bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ /start')
                # else:
                #     bot.send_message(message.chat.id, '–ü–æ–∫–∞. Tsch√ºss')

        bot.send_message(message.chat.id, words_list_excel_3[current_answer][1])
        current_article = words_list_excel_3[current_answer][0]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('der')
        item2 = types.KeyboardButton('die')
        item3 = types.KeyboardButton('das')
        markup.add(item1, item2, item3)
        msg = bot.send_message(message.chat.id, "–≤—ã–±–µ—Ä–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞—Ä—Ç–∏–∫–ª—å".format(message.from_user,
                                                                                     bot.get_me()),
                               parse_mode='html', reply_markup=markup)

        with open("new_words.txt", "w", encoding="utf-8") as f:
            for i in range(0, len(new_words)):
                f.write(new_words[i] + '\n')


if __name__ == '__main__':
    """
    main bot function
    """

    bot.skip_pending = True
    bot.polling(none_stop=True)
